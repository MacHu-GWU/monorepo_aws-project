# This is an advanced workflow to show you how to use cache to accelerate CI job run
name: check_cross_account_permission

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_REGION: "us-east-1"

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  with_pip_cache:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: üîê Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          # this role name has to match the ``github_action_open_id_connection.role_name`` field
          # in ``bootstrap/config.json`` file
          role-to-assume: arn:aws:iam::${{ secrets.DEVOPS_AWS_ACCOUNT_ID }}:role/monorepo-aws-github-oidc
          role-session-name: sample_role_session
          aws-region: ${{ env.AWS_REGION }}
      - name: üêç Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          # ref: https://github.com/actions/setup-python#caching-packages-dependencies
          cache: 'pip'
          cache-dependency-path: bootstrap/requirements.txt
      - name: üíæ install python dependencies
        run: pip install -r bootstrap/requirements.txt
      - name: üß™ check cross account permission
        env:
          DEV_AWS_ACCOUNT_ID: ${{ secrets.SBX_AWS_ACCOUNT_ID }}
          TEST_AWS_ACCOUNT_ID: ${{ secrets.TST_AWS_ACCOUNT_ID }}
          PROD_AWS_ACCOUNT_ID: ${{ secrets.PRD_AWS_ACCOUNT_ID }}
        run: python bootstrap/test_check_cross_account_permission.py
